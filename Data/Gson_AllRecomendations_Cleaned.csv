"Evaluation_Model","Evaluation_Model.Commit","Evaluation_Model.Datetime","Evaluation_Model.ProductionClass","Evaluation_Model.ChangedProductionMethods","Evaluation_Model.TestClass","Evaluation_Model.ChangedTestMethods","Evaluation_Model.ChangedAndCalled","Evaluation_Model.CalledTestMethods","Evaluation_Model.RecomendedTests","Evaluation_Model.RecomendedIndex"
"BusinessLogic.Evaluation_Model","13be1d104d5a5d39a93ff8202de4e75adbfc40f6","01-03-2024 09:17:12 PM +01:00","GsonBuilder","setDateFormat(int)","GsonBuilderTest","read(JsonReader)
testSetDateFormatValidStyle()
testSetDateFormatInvalidStyle()","testSetDateFormatValidStyle()
testSetDateFormatInvalidStyle()","public void testSetDateFormatValidStyle()
public void testSetDateFormatInvalidStyle()","testSetDateFormatInvalidStyle()
testSetDateFormatValidStyle()","2, 1"
"BusinessLogic.Evaluation_Model","2c94c757a6a9426cc2fe47bc1c63f69e7c73b7b4","06-11-2023 08:59:01 PM +01:00","ConstructorConstructor","construct()","ConstructorConstructorTest","testGet_AbstractClassNoArgConstructor()
testGet_Interface()","testGet_AbstractClassNoArgConstructor()
testGet_Interface()","public void testGet_AbstractClassNoArgConstructor()
public void testGet_Interface()","testGet_AbstractClassNoArgConstructor()
testGet_Interface()","1, 2"
"BusinessLogic.Evaluation_Model","c1da2d7070773af51ff7a98cf2979af61623e596","10-04-2023 10:50:25 AM -07:00","RuntimeTypeAdapterFactory","registerSubtype(Class, String)","RuntimeTypeAdapterFactoryFunctionalTest","registerSubtype(Class, String)
registerSubtype(Class)","registerSubtype(Class)","public RuntimeTypeAdapterFactory<T> registerSubtype(Class<? extends T> type)","registerSubtype(Class)","1"
"BusinessLogic.Evaluation_Model","af2179843601c73aa96062208d8f324a45243e47","06-02-2023 06:40:11 PM +01:00","JsonPrimitive","equals(Object)","JsonPrimitiveTest","testEqualsIntegerAndBigInteger()","testEqualsIntegerAndBigInteger()","public void testEqualsIntegerAndBigInteger()","testEqualsIntegerAndBigInteger()
testEquals()
testEqualsDoesNotEquateStringAndNonStringTypes()","1"
"BusinessLogic.Evaluation_Model","4dda4ec5ba81a02406f40f3d73192ab9bc568f48","18-04-2022 12:27:21 AM +02:00","LinkedTreeMap","clear()","LinkedTreeMapTest","testIterationOrder()
testRemoveRootDoesNotDoubleUnlink()
testPutNullKeyFails()
testPutNonComparableKeyFails()
testContainsNonComparableKeyReturnsFalse()
testContainsNullKeyIsAlwaysFalse()
testPutOverrides()
testEmptyStringValues()
testLargeSetOfRandomKeys()
testClear()
testEqualsAndHashCode()
testJavaSerialization()
assertIterationOrder(Iterable, T[])","testClear()","public void testClear()","testClear()","1"
"BusinessLogic.Evaluation_Model","4dda4ec5ba81a02406f40f3d73192ab9bc568f48","18-04-2022 12:27:21 AM +02:00","LinkedTreeMap","next()","LinkedTreeMapTest","testIterationOrder()
testRemoveRootDoesNotDoubleUnlink()
testPutNullKeyFails()
testPutNonComparableKeyFails()
testContainsNonComparableKeyReturnsFalse()
testContainsNullKeyIsAlwaysFalse()
testPutOverrides()
testEmptyStringValues()
testLargeSetOfRandomKeys()
testClear()
testEqualsAndHashCode()
testJavaSerialization()
assertIterationOrder(Iterable, T[])","testRemoveRootDoesNotDoubleUnlink()","public void testRemoveRootDoesNotDoubleUnlink()","testRemoveRootDoesNotDoubleUnlink()
assertAvlWalker(Node, String[])","1"
"BusinessLogic.Evaluation_Model","4dda4ec5ba81a02406f40f3d73192ab9bc568f48","18-04-2022 12:27:21 AM +02:00","LinkedTreeMap","iterator()","LinkedTreeMapTest","testIterationOrder()
testRemoveRootDoesNotDoubleUnlink()
testPutNullKeyFails()
testPutNonComparableKeyFails()
testContainsNonComparableKeyReturnsFalse()
testContainsNullKeyIsAlwaysFalse()
testPutOverrides()
testEmptyStringValues()
testLargeSetOfRandomKeys()
testClear()
testEqualsAndHashCode()
testJavaSerialization()
assertIterationOrder(Iterable, T[])","testRemoveRootDoesNotDoubleUnlink()","public void testRemoveRootDoesNotDoubleUnlink()","testRemoveRootDoesNotDoubleUnlink()","1"
"BusinessLogic.Evaluation_Model","2b08c88c09d14e0b1a68a982bab0bb18206df76b","12-03-2016 03:51:22 PM -05:00","JsonReader","nextInt()","JsonReaderTest","testPeekingUnquotedStringsPrefixedWithIntegers()","testPeekingUnquotedStringsPrefixedWithIntegers()","public void testPeekingUnquotedStringsPrefixedWithIntegers() throws IOException","testPeekingUnquotedStringsPrefixedWithIntegers()
testFailWithPositionDeepPath()
testNumberWithOctalPrefix()","1"
"BusinessLogic.Evaluation_Model","0669ff7fd16c26521b924a58c7dd64ab2dc1a46d","12-03-2016 11:52:13 AM -07:00","JsonReader","nextInt()","JsonReaderTest","testPeekingUnquotedStringsPrefixedWithIntegers()","testPeekingUnquotedStringsPrefixedWithIntegers()","public void testPeekingUnquotedStringsPrefixedWithIntegers() throws IOException","testPeekingUnquotedStringsPrefixedWithIntegers()
testFailWithPositionDeepPath()
testNumberWithOctalPrefix()","1"
"BusinessLogic.Evaluation_Model","9e5f86d10b3b3ff4ba0dfe7ba0722c9e640fcc20","04-11-2015 10:24:05 PM -05:00","TypeAdapters","toString()","CustomTypeAdaptersTest","serialize(ClassWithCustomTypeConverter, Type, JsonSerializationContext)
testCustomSerializers()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomDeserializers()
serialize(BagOfPrimitives, Type, JsonSerializationContext)
testCustomNestedSerializers()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomNestedDeserializers()
serialize(Base, Type, JsonSerializationContext)
testCustomTypeAdapterDoesNotAppliesToSubClasses()
serialize(Base, Type, JsonSerializationContext)
testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()
deserialize(JsonElement, Type, JsonDeserializationContext)
serialize(Foo, Type, JsonSerializationContext)
serialize(Boolean, Type, JsonSerializationContext)
testCustomSerializerInvokedForPrimitives()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomDeserializerInvokedForPrimitives()
serialize(byte[], Type, JsonSerializationContext)
testCustomByteArraySerializer()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomByteArrayDeserializerAndInstanceCreator()
createInstance(Type)
deserialize(JsonElement, Type, JsonDeserializationContext)
serialize(StringHolder, Type, JsonSerializationContext)
serialize(DataHolder, Type, JsonSerializationContext)
deserialize(JsonElement, Type, JsonDeserializationContext)
deserialize(JsonElement, Type, JsonDeserializationContext)
serialize(Date, Type, JsonSerializationContext)","serialize(byte[], Type, JsonSerializationContext)
testCustomByteArraySerializer()","public JsonElement serialize(byte[] src, Type typeOfSrc, JsonSerializationContext context)
public void testCustomByteArraySerializer()","serialize(byte[], Type, JsonSerializationContext)
testCustomByteArraySerializer()","1, 2"
"BusinessLogic.Evaluation_Model","e5b3f6368db33c846b094b0d695d3a1b826e3892","04-11-2015 06:52:20 PM -08:00","TypeAdapters","toString()","CustomTypeAdaptersTest","serialize(ClassWithCustomTypeConverter, Type, JsonSerializationContext)
testCustomSerializers()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomDeserializers()
serialize(BagOfPrimitives, Type, JsonSerializationContext)
testCustomNestedSerializers()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomNestedDeserializers()
serialize(Base, Type, JsonSerializationContext)
testCustomTypeAdapterDoesNotAppliesToSubClasses()
serialize(Base, Type, JsonSerializationContext)
testCustomTypeAdapterAppliesToSubClassesSerializedAsBaseClass()
deserialize(JsonElement, Type, JsonDeserializationContext)
serialize(Foo, Type, JsonSerializationContext)
serialize(Boolean, Type, JsonSerializationContext)
testCustomSerializerInvokedForPrimitives()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomDeserializerInvokedForPrimitives()
serialize(byte[], Type, JsonSerializationContext)
testCustomByteArraySerializer()
deserialize(JsonElement, Type, JsonDeserializationContext)
testCustomByteArrayDeserializerAndInstanceCreator()
createInstance(Type)
deserialize(JsonElement, Type, JsonDeserializationContext)
serialize(StringHolder, Type, JsonSerializationContext)
serialize(DataHolder, Type, JsonSerializationContext)
deserialize(JsonElement, Type, JsonDeserializationContext)
deserialize(JsonElement, Type, JsonDeserializationContext)
serialize(Date, Type, JsonSerializationContext)","serialize(byte[], Type, JsonSerializationContext)
testCustomByteArraySerializer()","public JsonElement serialize(byte[] src, Type typeOfSrc, JsonSerializationContext context)
public void testCustomByteArraySerializer()","serialize(byte[], Type, JsonSerializationContext)
testCustomByteArraySerializer()","1, 2"
"BusinessLogic.Evaluation_Model","14f16e2d0c3c60338d69a3e0f653b8b876fdc1be","11-10-2012 03:15:49 AM +00:00","JsonObject","get(String)","JsonObjectTest","testAddingAndRemovingObjectProperties()","testAddingAndRemovingObjectProperties()","public void testAddingAndRemovingObjectProperties() throws Exception","testAddingAndRemovingObjectProperties()","1"
"BusinessLogic.Evaluation_Model","eb2230caf0c8d1e2d9ea67e7c4afce72f1eccc3f","06-12-2011 03:35:52 PM +00:00","TypeAdapter","nullSafe()","StreamingTypeAdaptersTest","read(JsonReader)
write(JsonWriter, Person)
testNullSafe()","testNullSafe()","public void testNullSafe()","testNullSafe()","1"
"BusinessLogic.Evaluation_Model","0340e01f98274f2ec573fcd1475fdc3d3fbca4ef","23-10-2011 09:41:30 PM +00:00","JsonPrimitive","getAsBoolean()","JsonPrimitiveTest","testBoolean()","testBoolean()","public void testBoolean() throws Exception","testBoolean()","1"
"BusinessLogic.Evaluation_Model","feb9617bf087738ddb5becffdcaf16efeb187478","04-04-2011 10:09:51 PM +00:00","JsonArray","equals(Object)","JsonArrayTest","testEqualsNonEmptyArray()","testEqualsNonEmptyArray()","public void testEqualsNonEmptyArray()","testEqualsNonEmptyArray()","1"
"BusinessLogic.Evaluation_Model","feb9617bf087738ddb5becffdcaf16efeb187478","04-04-2011 10:09:51 PM +00:00","JsonObject","equals(Object)","JsonObjectTest","testEqualsNonEmptyObject()","testEqualsNonEmptyObject()","public void testEqualsNonEmptyObject()","testEqualsNonEmptyObject()","1"
"BusinessLogic.Evaluation_Model","2034090b15cfef51d81e860b1d49340147378618","31-03-2009 05:53:23 PM +00:00","JsonParser","parse(String)","JsonParserTest","setUp()
testParseString()
testParseReader()
testChangingCustomTreeAndDeserializing()","testParseString()","public void testParseString()","testParseString()","1"
